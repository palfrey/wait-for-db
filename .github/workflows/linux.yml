on: [push, pull_request]

name: Linux

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5   
    steps:
      - run: sudo apt-get install -y --no-install-recommends unixodbc-dev odbc-postgresql libsqliteodbc postgresql-10    
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}          
      - uses: actions-rs/cargo@v1
        env:
          ODBC_SYS_STATIC_PATH: /usr/lib/x86_64-linux-gnu/
          POSTGRES_DRIVER: /usr/lib/x86_64-linux-gnu/odbc/psqlodbca.so
          SQLITE_DRIVER: /usr/lib/x86_64-linux-gnu/odbc/libsqlite3odbc.so
        with:
          command: test
          args: -- --nocapture
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1          
        with:
          install: true
      - name: Docker build
        run: |
          docker build . -t wait_for_db
      - name: Docker help test
        run: |
          docker run --name wait_for_db wait_for_db --help
      - name: Docker copy
        run: |
          docker cp wait_for_db:/wait_for_db wait-for-db-linux-x86